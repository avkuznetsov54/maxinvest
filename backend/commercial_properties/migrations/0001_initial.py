# Generated by Django 3.0.6 on 2020-05-08 04:16

import commercial_properties.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geo_location', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('residential_properties', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Категория бизнеса',
                'verbose_name_plural': 'Категории бизнесов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CommercialPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Отображать, Да/Нет')),
                ('use_contacts_fixed_agent', models.BooleanField(default=False, verbose_name='Использовать контакты Закреплённого(-ых) агента(-ов)')),
                ('is_sale', models.BooleanField(default=False, verbose_name='Продажа')),
                ('is_rent', models.BooleanField(default=False, verbose_name='Аренда')),
                ('area', models.FloatField(blank=True, db_index=True, null=True, verbose_name='Площадь')),
                ('min_area', models.FloatField(blank=True, db_index=True, null=True, verbose_name='Площадь от, м')),
                ('max_area', models.FloatField(blank=True, db_index=True, null=True, verbose_name='Площадь до, м')),
                ('several_floors', models.BooleanField(default=False, verbose_name='Помещение с несколькими этажами')),
                ('address', models.CharField(db_index=True, default=None, max_length=150, verbose_name='Адрес')),
                ('ready_commercial_premise', models.CharField(blank=True, choices=[('building', 'Строящее'), ('finished', 'Готовое')], db_index=True, max_length=25, verbose_name='Готовность помещения')),
                ('rent_price', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Стоимость аренды, руб/мес.')),
                ('cost_of_sale', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Стоймость на продажу')),
                ('min_payback', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Окупаемость от, мес')),
                ('max_payback', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Окупаемость до, мес')),
                ('min_average_rental_rate', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Средняя арендная ставка, от')),
                ('max_average_rental_rate', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Средняя арендная ставка, до')),
                ('possible_income', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Возможный доход')),
                ('kw', models.FloatField(blank=True, db_index=True, null=True, verbose_name='кВт')),
                ('min_kw', models.FloatField(blank=True, db_index=True, null=True, verbose_name='кВт, от')),
                ('max_kw', models.FloatField(blank=True, db_index=True, null=True, verbose_name='кВт, до')),
                ('main_image', models.FileField(blank=True, null=True, upload_to=commercial_properties.models.generate_url_for_image, verbose_name='Главное изображение помещения')),
                ('alt_attr', models.CharField(blank=True, max_length=300, null=True, verbose_name='img alt')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('business_category', models.ManyToManyField(blank=True, default=None, related_name='compremises_businesscategory', to='commercial_properties.BusinessCategory', verbose_name='Категория бизнеса')),
                ('city', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compremises_city', to='geo_location.City', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Коммерческое помещение',
                'verbose_name_plural': 'Коммерческие помещения',
            },
        ),
        migrations.CreateModel(
            name='CommunicationSystems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Системы коммуникаций',
                'verbose_name_plural': 'Системы коммуникаций',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CookerHood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Вытяжка',
                'verbose_name_plural': 'Вытяжки',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PurposeOfCommercialPremise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Назначение помещения',
                'verbose_name_plural': 'Назначении помещений',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RelativeLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Расположение',
                'verbose_name_plural': 'Расположения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeEntranceToCommercialPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип входа в коммерческое помещение',
                'verbose_name_plural': 'Типы входов в коммерческое помещение',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VideoCommercialPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_on_video', models.URLField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ссылка на видео')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('commercial_premises', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commercial_properties.CommercialPremises', verbose_name='Коммерческое помещение')),
            ],
            options={
                'verbose_name': 'Видео Коммерческого помещения',
                'verbose_name_plural': 'Видео Коммерческого помещения',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ImagesCommercialPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_attr', models.CharField(blank=True, max_length=300, null=True, verbose_name='img alt')),
                ('image', models.FileField(blank=True, null=True, upload_to=commercial_properties.models.generate_url_for_image, verbose_name='Изображение')),
                ('commercial_premises', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commercial_properties.CommercialPremises', verbose_name='Коммерческое помещение')),
            ],
            options={
                'verbose_name': 'Изображение Коммерческого помещения',
                'verbose_name_plural': 'Изображения Коммерческого помещения',
            },
        ),
        migrations.CreateModel(
            name='FloorPlansCommercialPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_attr', models.CharField(blank=True, max_length=300, null=True, verbose_name='img alt')),
                ('image', models.FileField(blank=True, null=True, upload_to=commercial_properties.models.generate_url_for_image, verbose_name='Планировка Коммерческого помещения')),
                ('commercial_premises', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commercial_properties.CommercialPremises', verbose_name='Коммерческое помещение')),
            ],
            options={
                'verbose_name': 'Планировка Коммерческого помещения',
                'verbose_name_plural': 'Планировки Коммерческого помещения',
            },
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='communication_systems',
            field=models.ManyToManyField(blank=True, default=None, related_name='compremises_comsystems', to='commercial_properties.CommunicationSystems', verbose_name='Системы коммуникаций'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='cooker_hood',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compremises_cookerhood', to='commercial_properties.CookerHood', verbose_name='Вытяжка'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='district',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compremises_district', to='geo_location.District', verbose_name='Район'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='fixed_agent',
            field=models.ManyToManyField(blank=True, default=None, related_name='compremises_fixedagent', to=settings.AUTH_USER_MODEL, verbose_name='Закреплённый агент'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='floor',
            field=models.ManyToManyField(blank=True, default=None, related_name='compremises_floor', to='residential_properties.FloorInBuilding', verbose_name='Этаж'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='purpose_commercial_premise',
            field=models.ManyToManyField(blank=True, default=None, related_name='compremises_purpose', to='commercial_properties.PurposeOfCommercialPremise', verbose_name='Назначение коммерческого помещения'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='region',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compremises_region', to='geo_location.Region', verbose_name='Область'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='relative_location',
            field=models.ManyToManyField(blank=True, default=None, related_name='compremises_relativelocation', to='commercial_properties.RelativeLocation', verbose_name='Расположение'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='residential_complex',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compremises_rescomplex', to='residential_properties.ResidentialComplex', verbose_name='Жилой комплекс'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='type_entrance',
            field=models.ManyToManyField(blank=True, default=None, related_name='compremises_typeentrance', to='commercial_properties.TypeEntranceToCommercialPremises', verbose_name='Тип входа'),
        ),
    ]
